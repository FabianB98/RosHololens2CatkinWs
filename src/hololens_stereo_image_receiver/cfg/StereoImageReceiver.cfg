#!/usr/bin/env python
PACKAGE = "hololens_stereo_image_receiver"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("preprocessingDoImageNormalization", bool_t, 1, "Should the raw stereo images be normalized to a pixel value range of [0, 255]?", False)
gen.add("preprocessingDoHistogramEqualization", bool_t, 1, "Should the raw stereo images be normalized using histogram equalization?", False)
gen.add("preprocessingDoMedianFiltering", bool_t, 1, "Should the raw stereo images be denoised using a median filter?", False)
gen.add("preprocessingMedianFilterKernelSize", int_t, 1, "The kernel size for the median filter.", 3, 3, 21)

gen.add("sgbmMinDisparity", int_t, 2, "Minimum possible disparity value.", 0, 0, 480)
gen.add("sgbmNumDisparities", int_t, 2, "Maximum disparity minus minimum disparity", 96, 0, 480)
gen.add("sgbmBlockSize", int_t, 2, "Matched block size. Must be an odd number >= 1.", 15, 1, 75)
gen.add("sgbmP1Multiplier", int_t, 2, "Multiplier for P1 controlling disparity smoothness.", 8, 0, 1000)
gen.add("sgbmP2Multiplier", int_t, 2, "Multiplier for P2 controlling disparity smoothness.", 32, 0, 1000)
gen.add("sgbmDisp12MaxDiff", int_t, 2, "Maximum allowed difference (in integer pixel units) in the left-right disparity check.", 100, -1, 480)
gen.add("sgbmPreFilterCap", int_t, 2, "Truncation value for the prefiltered image pixels", 0, 0, 1000)
gen.add("sgbmUniquenessRatio", int_t, 2, "Margin in percentage by which the best (minimum) computed cost function value should win the second best value to consider the found match correct.", 15, 0, 100)
gen.add("sgbmSpeckleWindowSize", int_t, 2, "Maximum size of smooth disparity regions to consider their noise speckles and invalidate.", 200, 0, 10000)
gen.add("sgbmSpeckleRange", int_t, 2, "Maximum disparity variation within each connected component.", 2, 0, 10)
gen.add("sgbmUseModeHH", bool_t, 2, "Set to true to use StereoSGBM::MODE_HH instead of StereoSGBM::MODE_SGBM.", True)

gen.add("wlsLambda", double_t, 4, "Amount of regularization during filtering.", 10000.0, 0.0, 20000.0)
gen.add("wlsSigma", double_t, 4, "Sensitivity of the filtering process to source image edges.", 1.0, 0.0, 5.0)

gen.add("reconstructPointCloudFromRawDisparityMap", bool_t, 8, "reconstructPointCloudFromRawDisparityMap", False)
gen.add("minDisparityForReconstruction", double_t, 8, "minDisparityForReconstruction", 5.0, 0.0, 480.0)

exit(gen.generate(PACKAGE, "hololens_stereo_image_receiver", "StereoImageReceiver"))